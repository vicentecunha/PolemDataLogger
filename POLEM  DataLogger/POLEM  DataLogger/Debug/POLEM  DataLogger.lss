
POLEM  DataLogger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000017e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000001d2  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000030  00000000  00000000  00000202  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000147  00000000  00000000  00000232  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000d1  00000000  00000000  00000379  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000014a  00000000  00000000  0000044a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000044  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000163  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000dc  00000000  00000000  0000073b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000020  00000000  00000000  00000817  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
  88:	0c 94 bd 00 	jmp	0x17a	; 0x17a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <SPI_init>:
//-----------------------------------------------------------------------------
// SPI configuration and enable.
//-----------------------------------------------------------------------------
void SPI_init()
{
	SPI_MSB_FIRST;
  90:	8c b5       	in	r24, 0x2c	; 44
  92:	8f 7d       	andi	r24, 0xDF	; 223
  94:	8c bd       	out	0x2c, r24	; 44
	SPI_MASTER;
  96:	8c b5       	in	r24, 0x2c	; 44
  98:	80 61       	ori	r24, 0x10	; 16
  9a:	8c bd       	out	0x2c, r24	; 44
	SPI_CLOCK_DIVIDER_64;
  9c:	8c b5       	in	r24, 0x2c	; 44
  9e:	82 60       	ori	r24, 0x02	; 2
  a0:	8c bd       	out	0x2c, r24	; 44
  a2:	8c b5       	in	r24, 0x2c	; 44
  a4:	8e 7f       	andi	r24, 0xFE	; 254
  a6:	8c bd       	out	0x2c, r24	; 44
  a8:	8d b5       	in	r24, 0x2d	; 45
  aa:	8e 7f       	andi	r24, 0xFE	; 254
  ac:	8d bd       	out	0x2d, r24	; 45
	SPI_MODE_0;
  ae:	8c b5       	in	r24, 0x2c	; 44
  b0:	87 7f       	andi	r24, 0xF7	; 247
  b2:	8c bd       	out	0x2c, r24	; 44
  b4:	8c b5       	in	r24, 0x2c	; 44
  b6:	8b 7f       	andi	r24, 0xFB	; 251
  b8:	8c bd       	out	0x2c, r24	; 44
	SPI_PIN_CONFIG;
  ba:	84 b1       	in	r24, 0x04	; 4
  bc:	8c 62       	ori	r24, 0x2C	; 44
  be:	84 b9       	out	0x04, r24	; 4
  c0:	24 98       	cbi	0x04, 4	; 4
	SPI_ENABLE;
  c2:	8c b5       	in	r24, 0x2c	; 44
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	8c bd       	out	0x2c, r24	; 44
  c8:	08 95       	ret

000000ca <SD_init>:
//-----------------------------------------------------------------------------
// SD initialization.
//-----------------------------------------------------------------------------
void SD_init()
{
	SD_NATIVE;
  ca:	8c b5       	in	r24, 0x2c	; 44
  cc:	82 60       	ori	r24, 0x02	; 2
  ce:	8c bd       	out	0x2c, r24	; 44
  d0:	8c b5       	in	r24, 0x2c	; 44
  d2:	8e 7f       	andi	r24, 0xFE	; 254
  d4:	8c bd       	out	0x2c, r24	; 44
  d6:	8d b5       	in	r24, 0x2d	; 45
  d8:	8e 7f       	andi	r24, 0xFE	; 254
  da:	8d bd       	out	0x2d, r24	; 45
  dc:	2a 9a       	sbi	0x05, 2	; 5
  de:	8a e0       	ldi	r24, 0x0A	; 10
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	2e bd       	out	0x2e, r18	; 46
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	00 97       	sbiw	r24, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <SD_init+0x1a>
  ec:	0d b4       	in	r0, 0x2d	; 45
  ee:	07 fe       	sbrs	r0, 7
  f0:	fd cf       	rjmp	.-6      	; 0xec <SD_init+0x22>
	
	unsigned char R1 = 0;
	do {SD_CMD0(R1);}
  f2:	30 e4       	ldi	r19, 0x40	; 64
  f4:	25 e9       	ldi	r18, 0x95	; 149
  f6:	9f ef       	ldi	r25, 0xFF	; 255
  f8:	2a 98       	cbi	0x05, 2	; 5
  fa:	3e bd       	out	0x2e, r19	; 46
  fc:	0d b4       	in	r0, 0x2d	; 45
  fe:	07 fe       	sbrs	r0, 7
 100:	fd cf       	rjmp	.-6      	; 0xfc <SD_init+0x32>
 102:	1e bc       	out	0x2e, r1	; 46
 104:	1e bc       	out	0x2e, r1	; 46
 106:	1e bc       	out	0x2e, r1	; 46
 108:	1e bc       	out	0x2e, r1	; 46
 10a:	0d b4       	in	r0, 0x2d	; 45
 10c:	07 fe       	sbrs	r0, 7
 10e:	fd cf       	rjmp	.-6      	; 0x10a <SD_init+0x40>
 110:	2e bd       	out	0x2e, r18	; 46
 112:	0d b4       	in	r0, 0x2d	; 45
 114:	07 fe       	sbrs	r0, 7
 116:	fd cf       	rjmp	.-6      	; 0x112 <SD_init+0x48>
 118:	9e bd       	out	0x2e, r25	; 46
 11a:	0d b4       	in	r0, 0x2d	; 45
 11c:	07 fe       	sbrs	r0, 7
 11e:	fd cf       	rjmp	.-6      	; 0x11a <SD_init+0x50>
 120:	8e b5       	in	r24, 0x2e	; 46
 122:	2a 9a       	sbi	0x05, 2	; 5
	while(!IS_SD_IDLE(R1));
 124:	80 ff       	sbrs	r24, 0
 126:	e8 cf       	rjmp	.-48     	; 0xf8 <SD_init+0x2e>

	do {SD_CMD1(R1);}
 128:	31 e4       	ldi	r19, 0x41	; 65
 12a:	21 e0       	ldi	r18, 0x01	; 1
 12c:	9f ef       	ldi	r25, 0xFF	; 255
 12e:	2a 98       	cbi	0x05, 2	; 5
 130:	3e bd       	out	0x2e, r19	; 46
 132:	0d b4       	in	r0, 0x2d	; 45
 134:	07 fe       	sbrs	r0, 7
 136:	fd cf       	rjmp	.-6      	; 0x132 <SD_init+0x68>
 138:	1e bc       	out	0x2e, r1	; 46
 13a:	1e bc       	out	0x2e, r1	; 46
 13c:	1e bc       	out	0x2e, r1	; 46
 13e:	1e bc       	out	0x2e, r1	; 46
 140:	0d b4       	in	r0, 0x2d	; 45
 142:	07 fe       	sbrs	r0, 7
 144:	fd cf       	rjmp	.-6      	; 0x140 <SD_init+0x76>
 146:	2e bd       	out	0x2e, r18	; 46
 148:	0d b4       	in	r0, 0x2d	; 45
 14a:	07 fe       	sbrs	r0, 7
 14c:	fd cf       	rjmp	.-6      	; 0x148 <SD_init+0x7e>
 14e:	9e bd       	out	0x2e, r25	; 46
 150:	0d b4       	in	r0, 0x2d	; 45
 152:	07 fe       	sbrs	r0, 7
 154:	fd cf       	rjmp	.-6      	; 0x150 <SD_init+0x86>
 156:	8e b5       	in	r24, 0x2e	; 46
 158:	2a 9a       	sbi	0x05, 2	; 5
	while(R1);
 15a:	81 11       	cpse	r24, r1
 15c:	e8 cf       	rjmp	.-48     	; 0x12e <SD_init+0x64>
	
	SPI_CLOCK_DIVIDER_2;
 15e:	8c b5       	in	r24, 0x2c	; 44
 160:	8c 7f       	andi	r24, 0xFC	; 252
 162:	8c bd       	out	0x2c, r24	; 44
 164:	8d b5       	in	r24, 0x2d	; 45
 166:	81 60       	ori	r24, 0x01	; 1
 168:	8d bd       	out	0x2d, r24	; 45
 16a:	08 95       	ret

0000016c <main>:
// MAIN.
//-----------------------------------------------------------------------------
int main(void)
{
	// Initializations:
	SPI_init();
 16c:	0e 94 48 00 	call	0x90	; 0x90 <SPI_init>
	SD_init();
 170:	0e 94 65 00 	call	0xca	; 0xca <SD_init>
	
	
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	08 95       	ret

0000017a <_exit>:
 17a:	f8 94       	cli

0000017c <__stop_program>:
 17c:	ff cf       	rjmp	.-2      	; 0x17c <__stop_program>
