
POLEM  DataLogger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  0000015c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000c3  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000087  00000000  00000000  00000247  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000d4  00000000  00000000  000002ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000034  00000000  00000000  000003a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000156  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000018  00000000  00000000  0000052e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 65 00 	call	0xca	; 0xca <main>
  88:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <SPI_init>:
//-----------------------------------------------------------------------------
// SPI configuration and enable.
//-----------------------------------------------------------------------------
void SPI_init()
{
	SPI_MSB_FIRST;
  90:	8c b5       	in	r24, 0x2c	; 44
  92:	8f 7d       	andi	r24, 0xDF	; 223
  94:	8c bd       	out	0x2c, r24	; 44
	SPI_MASTER;
  96:	8c b5       	in	r24, 0x2c	; 44
  98:	80 61       	ori	r24, 0x10	; 16
  9a:	8c bd       	out	0x2c, r24	; 44
	SPI_CLOCK_DIVIDER_64;
  9c:	8c b5       	in	r24, 0x2c	; 44
  9e:	82 60       	ori	r24, 0x02	; 2
  a0:	8c bd       	out	0x2c, r24	; 44
  a2:	8c b5       	in	r24, 0x2c	; 44
  a4:	8e 7f       	andi	r24, 0xFE	; 254
  a6:	8c bd       	out	0x2c, r24	; 44
  a8:	8d b5       	in	r24, 0x2d	; 45
  aa:	8e 7f       	andi	r24, 0xFE	; 254
  ac:	8d bd       	out	0x2d, r24	; 45
	SPI_MODE_0;
  ae:	8c b5       	in	r24, 0x2c	; 44
  b0:	87 7f       	andi	r24, 0xF7	; 247
  b2:	8c bd       	out	0x2c, r24	; 44
  b4:	8c b5       	in	r24, 0x2c	; 44
  b6:	8b 7f       	andi	r24, 0xFB	; 251
  b8:	8c bd       	out	0x2c, r24	; 44
	SPI_PIN_CONFIG;
  ba:	84 b1       	in	r24, 0x04	; 4
  bc:	8c 62       	ori	r24, 0x2C	; 44
  be:	84 b9       	out	0x04, r24	; 4
  c0:	24 98       	cbi	0x04, 4	; 4
	SPI_ENABLE;
  c2:	8c b5       	in	r24, 0x2c	; 44
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	8c bd       	out	0x2c, r24	; 44
  c8:	08 95       	ret

000000ca <main>:
//-----------------------------------------------------------------------------
// MAIN.
//-----------------------------------------------------------------------------
int main(void)
{
	SPI_init();
  ca:	0e 94 48 00 	call	0x90	; 0x90 <SPI_init>
	
	//SD_init();
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	08 95       	ret

000000d4 <_exit>:
  d4:	f8 94       	cli

000000d6 <__stop_program>:
  d6:	ff cf       	rjmp	.-2      	; 0xd6 <__stop_program>
